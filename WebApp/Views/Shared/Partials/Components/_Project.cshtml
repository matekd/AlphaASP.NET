@model Project

@{
	// compare end date to current date, try get difference in weeks or days + 1 with module operator
	// adjust deadline span depending on difference, i.e. class "soon" if less than a week
}

<div class="project-card surface" status="@Model.Status.StatusName">
	@await Html.PartialAsync("Partials/Components/_ProjectOptionsModal", Model)

	<button class="edit-btn" data-toggle="true" data-target=@("#projectOptionsModal-" + Model.Id)></button>

	<div class="card-header">
		<img @(Model.ImageUrl != null ? $"src = {Model.ImageUrl}" : "") alt=""/>
		<h6 class="project-name">@Model.ProjectName</h6>
		<span class="project-client">@Model.Client.Name</span>
	</div>

	<p class="card-description">@(Model.Description != null ? Model.Description : "No description")</p>

	<div class="card-footer">
		<span class="deadline" data-deadline="@Model.EndDate" data-complete="@(Model.Status.StatusName == "Completed")"></span>

		<div class="member-group">
			@if (Model.Members != null && Model.Members.Any())
			{
				foreach(var member in Model.Members)
				{
					<img src=@(!string.IsNullOrEmpty(member.ImageUrl) ? member.ImageUrl : "/images/DefaultProfile.png") alt="@member.FirstName @member.LastName" />
				}
			}
		</div>
	</div>
</div>

<script>
	document.addEventListener("DOMContentLoaded", () => {
		updateRelativeDates()
	})

	function updateRelativeDates() {
		const countDowns = document.querySelectorAll(".card-footer .deadline")
		const dateOnly = new Date().toISOString().split('T')[0]
		const now = new Date(dateOnly)

		countDowns.forEach(span => {
			const complete = span.getAttribute("data-complete")
			if (complete === "True") {
				span.textContent = "Completed"
				span.classList.remove("soon")
				return
			}

			const deadline = new Date(span.getAttribute("data-deadline"))
			const Hours = Math.floor((deadline - now) / 3600000)
			const Days = Math.floor(Hours / 24)
			const Weeks = Math.floor(Days / 7)
			let timeAgo = ""
			if (Days < -6) {
				timeAgo = Weeks * -1 + " weeks behind"
				span.classList.add("soon")
			}
			else if (Days < 0) {
				timeAgo = Days * -1 + " days behind"
				span.classList.add("soon")
			}
			else if (Days < 7) {
				timeAgo = Days + " days left"
				span.classList.add("soon")
			}
			else {
				timeAgo = Weeks + " weeks left"
				span.classList.remove("soon")
			}

			span.textContent = timeAgo
		})
	}
</script>