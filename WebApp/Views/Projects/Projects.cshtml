@model IEnumerable<Project>

@{
    var started = Model.Where(p => p.Status.StatusName == "Sarted");
    var completed = Model.Where(p => p.Status.StatusName == "Completed");
    // var sCount = completed.Count(); // count directly in navbar
    // var cCount = completed.Count();
    ViewData["Title"] = "Projects";
}
@await Html.PartialAsync("Partials/Components/_AddProjectForm", new AddProjectModel())

<div class="main-header">
    <h2>@ViewData["Title"]</h2>
    <button class="btn blue add" data-modal="true" data-target="#addProjectModal">Add Project</button>
</div>

@* Hardcoded two statuses, for dynamic: iterate over all statuses, filter Model for each status *@
<div class="navbar">
    <a href="" class="tab-link active">ALL [9]</a>
    <a href="" class="tab-link">STARTED [9]</a>
    <a href="" class="tab-link">COMPLETED [0]</a>
</div>
<div class="project-list">
    @if (Model != null)
        foreach (var p in Model)
        {
            @await Html.PartialAsync("Partials/Components/_Project", p)
        }
</div>