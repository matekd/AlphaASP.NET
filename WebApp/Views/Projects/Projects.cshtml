@model IEnumerable<Project>

@{
    IEnumerable<Status> statuses = [];
    var statusResult = await _statusService.GetAllAsync();
    if (statusResult.Success)
        statuses = statusResult.Results!;
    ViewData["Title"] = "Projects";
}
@await Html.PartialAsync("Partials/Components/_AddProject", new ProjectModel())

<div class="main-header">
    <h2>@ViewData["Title"]</h2>
    <button class="btn blue add" data-modal="true" data-target="#addProjectModal">Add Project</button>
</div>

<div class="navbar">
    <button id="All" class="tab-link active" onclick=filterProjects("All")>ALL [@Model.Count()]</button>
    @foreach(var status in statuses)
    {
        <button id="@status.StatusName" class="tab-link" onclick=filterProjects("@status.StatusName")>@status.StatusName.ToUpper() [@Model.Count(s => s.Status.StatusName == status.StatusName)]</button>
    }
</div>

@if (Model != null)
{
    <div id="all" class="project-list">
        @foreach (var p in Model)
        {
            @await Html.PartialAsync("Partials/Components/_Project", p)
        }
    </div>
}

@await Html.PartialAsync("_FilterScripts")