@model IEnumerable<Project>

@{
    IEnumerable<Status> statuses = [];
    var statusResult = await _statusService.GetAllAsync();
    if (statusResult.Success)
        statuses = statusResult.Results!;
    ViewData["Title"] = "Projects";
}
@await Html.PartialAsync("Partials/Components/_AddProject", new ProjectModel())

<div class="main-header">
    <h2>@ViewData["Title"]</h2>
    <button class="btn blue add" data-modal="true" data-target="#addProjectModal">Add Project</button>
</div>

<div class="navbar">
    <button id="All" class="tab-link active" onclick=filterProjects("All")>ALL [@Model.Count()]</button>
    @foreach(var status in statuses)
    {
        <button id="@status.StatusName" class="tab-link" onclick=filterProjects("@status.StatusName")>@status.StatusName.ToUpper() [@Model.Count(s => s.Status.StatusName == status.StatusName)]</button>
    }
</div>

@if (Model != null)
{
    <div id="all" class="item-list wrap-list">
        @foreach (var p in Model)
        {
            @await Html.PartialAsync("Partials/Components/_Project", p)
        }
    </div>
}

@await Html.PartialAsync("Partials/_FilterScripts")

<script>
	document.addEventListener("DOMContentLoaded", () => {
		updateRelativeDates()
	})

	function updateRelativeDates() {
		const countDowns = document.querySelectorAll(".card-footer .deadline")
		const dateOnly = new Date().toISOString().split('T')[0]
		const now = new Date(dateOnly)

		countDowns.forEach(span => {
			const complete = span.getAttribute("data-complete")
			if (complete === "True") {
				span.textContent = "Completed"
				span.classList.remove("soon")
				return
			}

			const deadline = new Date(span.getAttribute("data-deadline"))
			const Hours = Math.floor((deadline - now) / 3600000)
			const Days = Math.floor(Hours / 24)
			const Weeks = Math.floor(Days / 7)
			let timeAgo = ""
			if (Days < -6) {
				timeAgo = Weeks * -1 + " weeks behind"
				span.classList.add("soon")
			}
			else if (Days < 0) {
				timeAgo = Days * -1 + " days behind"
				span.classList.add("soon")
			}
			else if (Days < 7) {
				timeAgo = Days + " days left"
				span.classList.add("soon")
			}
			else {
				timeAgo = Weeks + " weeks left"
				span.classList.remove("soon")
			}

			span.textContent = timeAgo
		})
	}
</script>